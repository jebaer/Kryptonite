name: Application deployment

on:
    push:
        branches: ['master']
    create:
        tags: ['v*']

jobs:
    test:
        name: unit testing application
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['12.16']
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - run: |
                  npm ci
                  npm run build --if-present
                  npm run test:coverage
            - name: Create test coverage archive
              run: tar -zvcf ./coverage.tar.gz ./coverage
              shell: bash
            - name: Retrieve test coverage archive
              uses: actions/upload-artifact@v2
              with:
                  name: code-coverage-report
                  path: ./coverage.tar.gz
                  retention-days: 5
    deploy:
        name: Deploy tags on Heroku
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v2
            - name: push on Heroku
              run: |
                    echo `heroku auth:token`
                    heroku auth:token
                    git push https://heroku:${{ secrets.HEROKU_API_TOKEN }}@git.heroku.com/kryptonyte.git origin/master:master
